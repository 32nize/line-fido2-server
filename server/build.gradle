/*
 * Copyright 2022 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
plugins {
    id 'java'
    id 'eclipse'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version "1.1.3"
    id 'org.asciidoctor.jvm.convert' version '3.1.0'
}

group = 'com.linecorp.line.auth.fido.fido2'
version = '0.1.1-SNAPSHOT'
java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar.enabled = true
bootJar.enabled = true

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}
configurations {
    asciidoctorExtensions
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

asciidoctor {
    configurations "asciidoctorExtensions"
    inputs.dir snippetsDir
    dependsOn test
}

task makeRestDocs(type: Copy) {
    dependsOn asciidoctor

    from file("${asciidoctor.outputDir}")
    into file('src/main/resources/static/docs')
}

task dockerBuild() {
    jar.enabled = false
    dependsOn(bootJar)
}

dependencies {
    // implementation('javax.xml.bind:jaxb-api:2.3.1')
    runtimeOnly('org.glassfish.jaxb:jaxb-runtime:2.3.1')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-web')

    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-cbor')
    // runtimeOnly('org.springframework.boot:spring-boot-devtools')
    // implementation('org.springframework.boot:spring-boot-starter-logging')

    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0')

    implementation 'junit:junit:4.12'

    //redis client
    implementation('redis.clients:jedis:4.4.3')

    // //logging
    // implementation('org.zalando:logbook-spring-boot-starter:1.8.1')

    //jwt
    implementation('com.auth0:java-jwt:3.4.0')

    //bouncy castle
    implementation('org.bouncycastle:bcprov-jdk15on:1.60')

    //eddsa library
    implementation('net.i2p.crypto:eddsa:0.3.0')

    //retrofit
    implementation('com.squareup.retrofit2:retrofit:2.4.0')
    implementation('com.squareup.retrofit2:converter-jackson:2.4.0')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation project(':common')

    implementation ('org.springframework.boot:spring-boot-starter-jdbc')
    runtimeOnly ('mysql:mysql-connector-java:8.0.23')

    //local db
    runtimeOnly('com.h2database:h2:1.4.200')
    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache:2.4.0'
    implementation 'org.ehcache:ehcache:3.8.1'
    implementation 'javax.cache:cache-api:1.1.1'

    compileOnly('org.springframework.boot:spring-boot-configuration-processor')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('commons-io:commons-io:2.13.0')
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.1.0'

    //Spring Rest Doc
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}
